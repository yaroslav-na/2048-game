{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_field_get.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js","node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js","node_modules/@swc/helpers/esm/_class_private_field_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_class_private_field_set.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","src/modules/Board.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/getRandomNumber.js","src/scripts/displayMessage.js","src/scripts/placeState.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $344b02e633e0f2c2$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac3905202f0710b7$export$184ff5d81c0e5775(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n    return descriptor.value;\n}\n\n\nfunction $753de3cb5925592a$export$20c20a422940e173(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    return privateMap.get(receiver);\n}\n\n\nfunction $2f97c2a4ea6269f4$export$5a67b255b80ee4f2(receiver, privateMap) {\n    var descriptor = (0, $753de3cb5925592a$export$20c20a422940e173)(receiver, privateMap, \"get\");\n    return (0, $ac3905202f0710b7$export$184ff5d81c0e5775)(receiver, descriptor);\n}\n\n\nfunction $f86983e96b0c893e$export$6b10452b5ac97eba(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $5d6c3530fa14a187$export$e235798705076415(obj, privateMap, value) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateMap);\n    privateMap.set(obj, value);\n}\n\n\nfunction $a91e4d47d6e0e68a$export$b7b24cdba6bcb11c(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n        descriptor.value = value;\n    }\n}\n\n\n\nfunction $20d5c04b0c6865c9$export$268446c9779b3a21(receiver, privateMap, value) {\n    var descriptor = (0, $753de3cb5925592a$export$20c20a422940e173)(receiver, privateMap, \"set\");\n    (0, $a91e4d47d6e0e68a$export$b7b24cdba6bcb11c)(receiver, descriptor, value);\n    return value;\n}\n\n\nfunction $ac6739cbe5bf1c84$export$ccedaf978f62b9dd(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\n\nfunction $ea91727f98d0802f$export$1002c20f28174dbf(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\"use strict\";\nvar $bcecb64214fa611a$exports = {};\n\n\n\n\n\n\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $bcecb64214fa611a$var$_state = /*#__PURE__*/ new WeakMap(), /**\r\n   *\r\n   * @param {number[]} axis\r\n   */ $bcecb64214fa611a$var$_moveAxis = /*#__PURE__*/ new WeakSet();\nvar $bcecb64214fa611a$var$Board = /*#__PURE__*/ function() {\n    function Board(state) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Board);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $bcecb64214fa611a$var$_moveAxis);\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $bcecb64214fa611a$var$_state, {\n            writable: true,\n            value: void 0\n        });\n        (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $bcecb64214fa611a$var$_state, state);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Board, [\n        {\n            /**\r\n   *\r\n   *\r\n   * @param {(\r\n   *  boardItemValue: number,\r\n   *  indexes: {x: number, y: number},\r\n   *  board: number[][]\r\n   * ) => boolean} filterFn\r\n   * @returns {{x: number, y: number}[]}\r\n   */ key: \"filterCells\",\n            value: function filterCells(filterFn) {\n                var result = [];\n                var state = this.getState();\n                for(var y in state)for(var x in state[y]){\n                    var indexes = {\n                        x: x,\n                        y: y\n                    };\n                    if (filterFn(state[y][x], indexes, state)) result.push(indexes);\n                }\n                return result;\n            }\n        },\n        {\n            /**\r\n   *\r\n   * @returns {number[][]}\r\n   */ key: \"getState\",\n            value: function getState() {\n                return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $bcecb64214fa611a$var$_state)).map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        },\n        {\n            key: \"getMovedLeftState\",\n            value: function getMovedLeftState() {\n                var newState = [];\n                var mergedValues = [];\n                var state = this.getState();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var _mergedValues;\n                        var _class_private_method_get_call = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $bcecb64214fa611a$var$_moveAxis, $bcecb64214fa611a$var$moveAxis).call(this, row), mergedAxisValues = _class_private_method_get_call.mergedValues, newAxis = _class_private_method_get_call.newAxis;\n                        newState.push(newAxis);\n                        (_mergedValues = mergedValues).push.apply(_mergedValues, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedAxisValues));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return {\n                    newState: newState,\n                    mergedValues: mergedValues\n                };\n            }\n        },\n        {\n            key: \"getMovedRightState\",\n            value: function getMovedRightState() {\n                var newState = [];\n                var mergedValues = [];\n                var state = this.getState();\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        var _mergedValues;\n                        var _class_private_method_get_call = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $bcecb64214fa611a$var$_moveAxis, $bcecb64214fa611a$var$moveAxis).call(this, row.reverse()), mergedAxisValues = _class_private_method_get_call.mergedValues, newAxis = _class_private_method_get_call.newAxis;\n                        newState.push(newAxis.reverse());\n                        (_mergedValues = mergedValues).push.apply(_mergedValues, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedAxisValues));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return {\n                    newState: newState,\n                    mergedValues: mergedValues\n                };\n            }\n        },\n        {\n            key: \"getMovedUpState\",\n            value: function getMovedUpState() {\n                var state = this.getState();\n                var mergedValues = [];\n                for(var x in state){\n                    var _mergedValues;\n                    var column = [];\n                    for(var y in state[x])column.push(state[y][x]);\n                    var _class_private_method_get_call = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $bcecb64214fa611a$var$_moveAxis, $bcecb64214fa611a$var$moveAxis).call(this, column), mergedAxisValues = _class_private_method_get_call.mergedValues, newColumn = _class_private_method_get_call.newAxis;\n                    for(var y1 in state[x])state[y1][x] = newColumn[y1];\n                    (_mergedValues = mergedValues).push.apply(_mergedValues, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedAxisValues));\n                }\n                return {\n                    newState: state,\n                    mergedValues: mergedValues\n                };\n            }\n        },\n        {\n            key: \"getMovedDownState\",\n            value: function getMovedDownState() {\n                var state = this.getState().reverse();\n                var mergedValues = [];\n                for(var x in state){\n                    var _mergedValues;\n                    var column = [];\n                    for(var y in state[x])column.push(state[y][x]);\n                    var _class_private_method_get_call = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $bcecb64214fa611a$var$_moveAxis, $bcecb64214fa611a$var$moveAxis).call(this, column), mergedAxisValues = _class_private_method_get_call.mergedValues, newColumn = _class_private_method_get_call.newAxis;\n                    for(var y1 in state[x])state[y1][x] = newColumn[y1];\n                    (_mergedValues = mergedValues).push.apply(_mergedValues, (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedAxisValues));\n                }\n                return {\n                    newState: state.reverse(),\n                    mergedValues: mergedValues\n                };\n            }\n        }\n    ]);\n    return Board;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($bcecb64214fa611a$var$Board, \"SIZE\", 4);\nfunction $bcecb64214fa611a$var$moveAxis(axis) {\n    var nonEmptyCells = axis.filter(function(item) {\n        return item !== 0;\n    });\n    var newAxis = [];\n    var mergedValues = [];\n    for(var index = 0; index < nonEmptyCells.length; index++){\n        var currentValue = nonEmptyCells[index];\n        var nextValue = nonEmptyCells[index + 1];\n        if (currentValue === nextValue) {\n            currentValue = currentValue + nextValue;\n            mergedValues.push(currentValue);\n            index++;\n        }\n        newAxis.push(currentValue);\n    }\n    while(newAxis.length < axis.length)newAxis.push(0);\n    return {\n        newAxis: newAxis,\n        mergedValues: mergedValues\n    };\n}\n$bcecb64214fa611a$exports = $bcecb64214fa611a$var$Board;\n\n\nvar $5e3de3f543b2de52$exports = {};\n/**\r\n *\r\n * @param {number} max\r\n * @param {number} min\r\n * @returns random number from `min` inclusive to `max` exclusive\r\n * @example getRandomNumber(10, 20): // any number in [10, 11...19]\r\n */ function $5e3de3f543b2de52$var$getRandomNumber(max) {\n    var min = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n$5e3de3f543b2de52$exports = $5e3de3f543b2de52$var$getRandomNumber;\n\n\nvar $344b02e633e0f2c2$var$_initialState = /*#__PURE__*/ new WeakMap(), $344b02e633e0f2c2$var$_board = /*#__PURE__*/ new WeakMap(), $344b02e633e0f2c2$var$_score = /*#__PURE__*/ new WeakMap(), $344b02e633e0f2c2$var$_status = /*#__PURE__*/ new WeakMap(), /**\r\n   *\r\n   * @param {() => {newState: number[][], mergedValues: number[]}} cb\r\n   */ $344b02e633e0f2c2$var$_move = /*#__PURE__*/ new WeakSet(), $344b02e633e0f2c2$var$_checkWin = /*#__PURE__*/ new WeakSet(), $344b02e633e0f2c2$var$_checkLose = /*#__PURE__*/ new WeakSet(), $344b02e633e0f2c2$var$_fillRandomCell = /*#__PURE__*/ new WeakSet();\n/**\r\n * This class represents the game.\r\n * Now it has a basic structure, that is needed for testing.\r\n * Feel free to add more props and methods if needed.\r\n */ var $344b02e633e0f2c2$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $344b02e633e0f2c2$var$_move);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $344b02e633e0f2c2$var$_checkWin);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $344b02e633e0f2c2$var$_checkLose);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $344b02e633e0f2c2$var$_fillRandomCell);\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $344b02e633e0f2c2$var$_initialState, {\n            writable: true,\n            value: [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ]\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $344b02e633e0f2c2$var$_board, {\n            writable: true,\n            value: void 0\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $344b02e633e0f2c2$var$_score, {\n            writable: true,\n            value: void 0\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $344b02e633e0f2c2$var$_status, {\n            writable: true,\n            value: void 0\n        });\n        (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_initialState, initialState !== null && initialState !== void 0 ? initialState : (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_initialState));\n        this.restart();\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_move, $344b02e633e0f2c2$var$move).call(this, function() {\n                    return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $344b02e633e0f2c2$var$_board).getMovedLeftState();\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_move, $344b02e633e0f2c2$var$move).call(this, function() {\n                    return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $344b02e633e0f2c2$var$_board).getMovedRightState();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_move, $344b02e633e0f2c2$var$move).call(this, function() {\n                    return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $344b02e633e0f2c2$var$_board).getMovedUpState();\n                });\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_move, $344b02e633e0f2c2$var$move).call(this, function() {\n                    return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $344b02e633e0f2c2$var$_board).getMovedDownState();\n                });\n            }\n        },\n        {\n            /**\r\n   * @returns {number}\r\n   */ key: \"getScore\",\n            value: function getScore() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_score);\n            }\n        },\n        {\n            /**\r\n   * @returns {number[][]}\r\n   */ key: \"getState\",\n            value: function getState() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).getState();\n            }\n        },\n        {\n            /**\r\n   * Returns the current game status.\r\n   *\r\n   * @returns {Game.STATUSES[keyof Game.STATUSES]}\r\n   *\r\n   * `idle` - the game has not started yet (the initial state);\r\n   * `playing` - the game is in progress;\r\n   * `win` - the game is won;\r\n   * `lose` - the game is lost\r\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_status);\n            }\n        },\n        {\n            /**\r\n   * Starts the game.\r\n   */ key: \"start\",\n            value: function start() {\n                var CELLS_TO_FILL = 2;\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_status, Game.STATUSES.playing);\n                for(var cellsLeft = CELLS_TO_FILL; cellsLeft > 0; cellsLeft--)(0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_fillRandomCell, $344b02e633e0f2c2$var$fillRandomCell).call(this);\n            }\n        },\n        {\n            /**\r\n   * Resets the game.\r\n   */ key: \"restart\",\n            value: function restart() {\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_status, Game.STATUSES.idle);\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_score, 0);\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_board, new $bcecb64214fa611a$exports((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_initialState)));\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($344b02e633e0f2c2$var$Game, \"STATUSES\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    lose: \"lose\",\n    win: \"win\"\n});\nfunction $344b02e633e0f2c2$var$move(cb) {\n    if ((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_status) !== $344b02e633e0f2c2$var$Game.STATUSES.playing) return;\n    var _cb = cb(), newState = _cb.newState, mergedValues = _cb.mergedValues;\n    if (JSON.stringify(newState) === JSON.stringify((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).getState())) return;\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_score, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_score) + mergedValues.reduce(function(sum, value) {\n        return sum + value;\n    }, 0));\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_board, new $bcecb64214fa611a$exports(newState));\n    (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_fillRandomCell, $344b02e633e0f2c2$var$fillRandomCell).call(this);\n    (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_checkWin, $344b02e633e0f2c2$var$checkWin).call(this);\n    (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $344b02e633e0f2c2$var$_checkLose, $344b02e633e0f2c2$var$checkLose).call(this);\n}\nfunction $344b02e633e0f2c2$var$checkWin() {\n    var WIN_VALUE = 2048;\n    var doesStateIncludeWinValue = (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).getState().flat().find(function(value) {\n        return value === WIN_VALUE;\n    });\n    if (doesStateIncludeWinValue) (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_status, $344b02e633e0f2c2$var$Game.STATUSES.win);\n}\nfunction $344b02e633e0f2c2$var$checkLose() {\n    var _this = this;\n    var state = (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).getState();\n    var canStateBeChanged = [\n        \"getMovedUpState\",\n        \"getMovedRightState\",\n        \"getMovedLeftState\",\n        \"getMovedDownState\"\n    ].some(function(getMovedState) {\n        var newState = (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $344b02e633e0f2c2$var$_board)[getMovedState]().newState;\n        return JSON.stringify(state) !== JSON.stringify(newState);\n    });\n    if (canStateBeChanged) return;\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_status, $344b02e633e0f2c2$var$Game.STATUSES.lose);\n}\nfunction $344b02e633e0f2c2$var$fillRandomCell() {\n    var SMALL_NUMBER = 2;\n    var BIG_NUMBER = 4;\n    if ((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_status) !== $344b02e633e0f2c2$var$Game.STATUSES.playing) return;\n    var removeZeros = function(value) {\n        return value === 0;\n    };\n    var cellsWithZeros = (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).filterCells(removeZeros);\n    if (cellsWithZeros.length === 0) return;\n    var _cellsWithZeros_getRandomNumber = cellsWithZeros[$5e3de3f543b2de52$exports(cellsWithZeros.length)], x = _cellsWithZeros_getRandomNumber.x, y = _cellsWithZeros_getRandomNumber.y;\n    var state = (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $344b02e633e0f2c2$var$_board).getState();\n    state[y][x] = $5e3de3f543b2de52$exports(10) === 0 ? BIG_NUMBER : SMALL_NUMBER;\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $344b02e633e0f2c2$var$_board, new $bcecb64214fa611a$exports(state));\n}\n$344b02e633e0f2c2$exports = $344b02e633e0f2c2$var$Game;\n\n\nvar $786b808137f48d08$exports = {};\n/**\n *\n * @param {Object<string, HTMLElement>} HTMLMessages\n * @param {string} gameStatus\n * @param {string} hiddenClass\n */ function $786b808137f48d08$var$displayMessage(HTMLMessages, gameStatus, hiddenClass) {\n    var _HTMLMessages_gameStatus;\n    for(var HTMLMessage in HTMLMessages)if (!HTMLMessages[HTMLMessage].classList.contains(hiddenClass)) HTMLMessages[HTMLMessage].classList.add(hiddenClass);\n    (_HTMLMessages_gameStatus = HTMLMessages[gameStatus]) === null || _HTMLMessages_gameStatus === void 0 ? void 0 : _HTMLMessages_gameStatus.classList.remove(hiddenClass);\n}\n$786b808137f48d08$exports = $786b808137f48d08$var$displayMessage;\n\n\nvar $aa191dae48ec707d$exports = {};\n/**\n *\n * @param {number[][]} state\n * @param {HTMLElement[]} HTMLCells\n */ function $aa191dae48ec707d$var$placeState(state, HTMLCells) {\n    var FIELD_CELL_CLASSES = \"field-cell field-cell--\";\n    for(var y in state)for(var x in state[y]){\n        var currentCell = HTMLCells[y * state.length + +x];\n        var currentValue = state[y][x];\n        currentCell.innerHTML = currentValue;\n        currentCell.className = FIELD_CELL_CLASSES + currentValue;\n    }\n}\n$aa191dae48ec707d$exports = $aa191dae48ec707d$var$placeState;\n\n\nvar $197cd56b15c33885$var$HIDDEN_CLASS = \"hidden\";\nvar $197cd56b15c33885$var$HTMLStartButtons = {\n    start: document.querySelector(\".button.start\"),\n    restart: document.querySelector(\".button.restart\")\n};\nvar $197cd56b15c33885$var$HTMLMessages = {\n    lose: document.querySelector(\".message.message-lose\"),\n    win: document.querySelector(\".message.message-win\"),\n    idle: document.querySelector(\".message.message-start\")\n};\nvar $197cd56b15c33885$var$HTMLScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$HTMLCells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$game = new $344b02e633e0f2c2$exports();\n$197cd56b15c33885$var$HTMLStartButtons.start.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$HTMLStartButtons.start.classList.add($197cd56b15c33885$var$HIDDEN_CLASS);\n    $197cd56b15c33885$var$HTMLStartButtons.restart.classList.remove($197cd56b15c33885$var$HIDDEN_CLASS);\n    $197cd56b15c33885$var$game.start();\n    $aa191dae48ec707d$exports($197cd56b15c33885$var$game.getState(), $197cd56b15c33885$var$HTMLCells);\n    $786b808137f48d08$exports($197cd56b15c33885$var$HTMLMessages, $197cd56b15c33885$var$game.getStatus(), $197cd56b15c33885$var$HIDDEN_CLASS);\n});\n$197cd56b15c33885$var$HTMLStartButtons.restart.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$HTMLStartButtons.restart.classList.add($197cd56b15c33885$var$HIDDEN_CLASS);\n    $197cd56b15c33885$var$HTMLStartButtons.start.classList.remove($197cd56b15c33885$var$HIDDEN_CLASS);\n    $197cd56b15c33885$var$game.restart();\n    $aa191dae48ec707d$exports($197cd56b15c33885$var$game.getState(), $197cd56b15c33885$var$HTMLCells);\n    $786b808137f48d08$exports($197cd56b15c33885$var$HTMLMessages, $197cd56b15c33885$var$game.getStatus(), $197cd56b15c33885$var$HIDDEN_CLASS);\n    $197cd56b15c33885$var$HTMLScore.innerHTML = $197cd56b15c33885$var$game.getScore();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.code){\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n    }\n    $197cd56b15c33885$var$HTMLScore.innerHTML = $197cd56b15c33885$var$game.getScore();\n    $786b808137f48d08$exports($197cd56b15c33885$var$HTMLMessages, $197cd56b15c33885$var$game.getStatus(), $197cd56b15c33885$var$HIDDEN_CLASS);\n    $aa191dae48ec707d$exports($197cd56b15c33885$var$game.getState(), $197cd56b15c33885$var$HTMLCells);\n});\n\n})();\n//# sourceMappingURL=index.1f9d8f2b.js.map\n","'use strict';\n\nconst Game = require('../modules/Game');\nconst displayMessage = require('./displayMessage');\nconst placeState = require('./placeState');\n\nconst HIDDEN_CLASS = 'hidden';\n\nconst HTMLStartButtons = {\n  start: document.querySelector('.button.start'),\n  restart: document.querySelector('.button.restart'),\n};\nconst HTMLMessages = {\n  lose: document.querySelector('.message.message-lose'),\n  win: document.querySelector('.message.message-win'),\n  idle: document.querySelector('.message.message-start'),\n};\nconst HTMLScore = document.querySelector('.game-score');\nconst HTMLCells = document.querySelectorAll('.field-cell');\n\nconst game = new Game();\n\nHTMLStartButtons.start.addEventListener('click', () => {\n  HTMLStartButtons.start.classList.add(HIDDEN_CLASS);\n  HTMLStartButtons.restart.classList.remove(HIDDEN_CLASS);\n\n  game.start();\n  placeState(game.getState(), HTMLCells);\n  displayMessage(HTMLMessages, game.getStatus(), HIDDEN_CLASS);\n});\n\nHTMLStartButtons.restart.addEventListener('click', () => {\n  HTMLStartButtons.restart.classList.add(HIDDEN_CLASS);\n  HTMLStartButtons.start.classList.remove(HIDDEN_CLASS);\n\n  game.restart();\n  placeState(game.getState(), HTMLCells);\n  displayMessage(HTMLMessages, game.getStatus(), HIDDEN_CLASS);\n  HTMLScore.innerHTML = game.getScore();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.code) {\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n\n  HTMLScore.innerHTML = game.getScore();\n  displayMessage(HTMLMessages, game.getStatus(), HIDDEN_CLASS);\n  placeState(game.getState(), HTMLCells);\n});\n","'use strict';\r\n\r\n// const getRandomNumber = require('../utils/getRandomNumber');\r\nconst Board = require('./Board');\r\nconst getRandomNumber = require('./getRandomNumber');\r\n\r\n/**\r\n * This class represents the game.\r\n * Now it has a basic structure, that is needed for testing.\r\n * Feel free to add more props and methods if needed.\r\n */\r\nclass Game {\r\n  static STATUSES = {\r\n    idle: 'idle',\r\n    playing: 'playing',\r\n    lose: 'lose',\r\n    win: 'win',\r\n  };\r\n\r\n  #initialState = [\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n  #board;\r\n  #score;\r\n  #status;\r\n\r\n  /**\r\n   * Creates a new game instance.\r\n   *\r\n   * @param {number[][]} initialState\r\n   * The initial state of the board.\r\n   * @default\r\n   * [[0, 0, 0, 0],\r\n   *  [0, 0, 0, 0],\r\n   *  [0, 0, 0, 0],\r\n   *  [0, 0, 0, 0]]\r\n   *\r\n   * If passed, the board will be initialized with the provided\r\n   * initial state.\r\n   */\r\n  constructor(initialState) {\r\n    this.#initialState = initialState ?? this.#initialState;\r\n    this.restart();\r\n  }\r\n\r\n  moveLeft() {\r\n    this.#move(() => this.#board.getMovedLeftState());\r\n  }\r\n  moveRight() {\r\n    this.#move(() => this.#board.getMovedRightState());\r\n  }\r\n  moveUp() {\r\n    this.#move(() => this.#board.getMovedUpState());\r\n  }\r\n  moveDown() {\r\n    this.#move(() => this.#board.getMovedDownState());\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  getScore() {\r\n    return this.#score;\r\n  }\r\n\r\n  /**\r\n   * @returns {number[][]}\r\n   */\r\n  getState() {\r\n    return this.#board.getState();\r\n  }\r\n\r\n  /**\r\n   * Returns the current game status.\r\n   *\r\n   * @returns {Game.STATUSES[keyof Game.STATUSES]}\r\n   *\r\n   * `idle` - the game has not started yet (the initial state);\r\n   * `playing` - the game is in progress;\r\n   * `win` - the game is won;\r\n   * `lose` - the game is lost\r\n   */\r\n  getStatus() {\r\n    return this.#status;\r\n  }\r\n\r\n  /**\r\n   * Starts the game.\r\n   */\r\n  start() {\r\n    const CELLS_TO_FILL = 2;\r\n\r\n    this.#status = Game.STATUSES.playing;\r\n\r\n    for (let cellsLeft = CELLS_TO_FILL; cellsLeft > 0; cellsLeft--) {\r\n      this.#fillRandomCell();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the game.\r\n   */\r\n  restart() {\r\n    this.#status = Game.STATUSES.idle;\r\n    this.#score = 0;\r\n    this.#board = new Board(this.#initialState);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {() => {newState: number[][], mergedValues: number[]}} cb\r\n   */\r\n  #move(cb) {\r\n    if (this.#status !== Game.STATUSES.playing) {\r\n      return;\r\n    }\r\n\r\n    const { newState, mergedValues } = cb();\r\n\r\n    if (JSON.stringify(newState) === JSON.stringify(this.#board.getState())) {\r\n      return;\r\n    }\r\n\r\n    this.#score += mergedValues.reduce((sum, value) => sum + value, 0);\r\n    this.#board = new Board(newState);\r\n    this.#fillRandomCell();\r\n    this.#checkWin();\r\n    this.#checkLose();\r\n  }\r\n\r\n  #checkWin() {\r\n    const WIN_VALUE = 2048;\r\n    const doesStateIncludeWinValue = this.#board\r\n      .getState()\r\n      .flat()\r\n      .find((value) => value === WIN_VALUE);\r\n\r\n    if (doesStateIncludeWinValue) {\r\n      this.#status = Game.STATUSES.win;\r\n    }\r\n  }\r\n\r\n  #checkLose() {\r\n    const state = this.#board.getState();\r\n    const canStateBeChanged = [\r\n      'getMovedUpState',\r\n      'getMovedRightState',\r\n      'getMovedLeftState',\r\n      'getMovedDownState',\r\n    ].some((getMovedState) => {\r\n      const { newState } = this.#board[getMovedState]();\r\n\r\n      return JSON.stringify(state) !== JSON.stringify(newState);\r\n    });\r\n\r\n    if (canStateBeChanged) {\r\n      return;\r\n    }\r\n    this.#status = Game.STATUSES.lose;\r\n  }\r\n\r\n  #fillRandomCell() {\r\n    const SMALL_NUMBER = 2;\r\n    const BIG_NUMBER = 4;\r\n\r\n    if (this.#status !== Game.STATUSES.playing) {\r\n      return;\r\n    }\r\n\r\n    const removeZeros = (value) => value === 0;\r\n    const cellsWithZeros = this.#board.filterCells(removeZeros);\r\n\r\n    if (cellsWithZeros.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const { x, y } = cellsWithZeros[getRandomNumber(cellsWithZeros.length)];\r\n    const state = this.#board.getState();\r\n\r\n    state[y][x] = getRandomNumber(10) === 0 ? BIG_NUMBER : SMALL_NUMBER;\r\n\r\n    this.#board = new Board(state);\r\n  }\r\n}\r\n\r\nmodule.exports = Game;\r\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","import { _class_apply_descriptor_get } from \"./_class_apply_descriptor_get.js\";\nimport { _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nexport function _class_private_field_get(receiver, privateMap) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"get\");\n    return _class_apply_descriptor_get(receiver, descriptor);\n}\nexport { _class_private_field_get as _ };\n","export function _class_apply_descriptor_get(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n\n    return descriptor.value;\n}\nexport { _class_apply_descriptor_get as _ };\n","export function _class_extract_field_descriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n\n    return privateMap.get(receiver);\n}\nexport { _class_extract_field_descriptor as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n","export function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","import { _class_apply_descriptor_set } from \"./_class_apply_descriptor_set.js\";\nimport { _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nexport function _class_private_field_set(receiver, privateMap, value) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"set\");\n    _class_apply_descriptor_set(receiver, descriptor, value);\n    return value;\n}\nexport { _class_private_field_set as _ };\n","export function _class_apply_descriptor_set(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nexport { _class_apply_descriptor_set as _ };\n","export function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","'use strict';\r\n\r\nclass Board {\r\n  static SIZE = 4;\r\n  #state;\r\n\r\n  /**\r\n   *\r\n   * @param {number[][]} state\r\n   */\r\n\r\n  constructor(state) {\r\n    this.#state = state;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {(\r\n   *  boardItemValue: number,\r\n   *  indexes: {x: number, y: number},\r\n   *  board: number[][]\r\n   * ) => boolean} filterFn\r\n   * @returns {{x: number, y: number}[]}\r\n   */\r\n\r\n  filterCells(filterFn) {\r\n    const result = [];\r\n    const state = this.getState();\r\n\r\n    for (const y in state) {\r\n      for (const x in state[y]) {\r\n        const indexes = { x, y };\r\n\r\n        if (filterFn(state[y][x], indexes, state)) {\r\n          result.push(indexes);\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number[][]}\r\n   */\r\n  getState() {\r\n    return [...this.#state].map((row) => [...row]);\r\n  }\r\n\r\n  getMovedLeftState() {\r\n    const newState = [];\r\n    const mergedValues = [];\r\n    const state = this.getState();\r\n\r\n    for (const row of state) {\r\n      const { mergedValues: mergedAxisValues, newAxis } = this.#moveAxis(row);\r\n\r\n      newState.push(newAxis);\r\n      mergedValues.push(...mergedAxisValues);\r\n    }\r\n\r\n    return { newState, mergedValues };\r\n  }\r\n\r\n  getMovedRightState() {\r\n    const newState = [];\r\n    const mergedValues = [];\r\n    const state = this.getState();\r\n\r\n    for (const row of state) {\r\n      const { mergedValues: mergedAxisValues, newAxis } = this.#moveAxis(\r\n        row.reverse(),\r\n      );\r\n\r\n      newState.push(newAxis.reverse());\r\n      mergedValues.push(...mergedAxisValues);\r\n    }\r\n\r\n    return { newState, mergedValues };\r\n  }\r\n\r\n  getMovedUpState() {\r\n    const state = this.getState();\r\n    const mergedValues = [];\r\n\r\n    for (const x in state) {\r\n      const column = [];\r\n\r\n      for (const y in state[x]) {\r\n        column.push(state[y][x]);\r\n      }\r\n\r\n      const { mergedValues: mergedAxisValues, newAxis: newColumn } =\r\n        this.#moveAxis(column);\r\n\r\n      for (const y in state[x]) {\r\n        state[y][x] = newColumn[y];\r\n      }\r\n\r\n      mergedValues.push(...mergedAxisValues);\r\n    }\r\n\r\n    return { newState: state, mergedValues };\r\n  }\r\n\r\n  getMovedDownState() {\r\n    const state = this.getState().reverse();\r\n    const mergedValues = [];\r\n\r\n    for (const x in state) {\r\n      const column = [];\r\n\r\n      for (const y in state[x]) {\r\n        column.push(state[y][x]);\r\n      }\r\n\r\n      const { mergedValues: mergedAxisValues, newAxis: newColumn } =\r\n        this.#moveAxis(column);\r\n\r\n      for (const y in state[x]) {\r\n        state[y][x] = newColumn[y];\r\n      }\r\n\r\n      mergedValues.push(...mergedAxisValues);\r\n    }\r\n\r\n    return { newState: state.reverse(), mergedValues };\r\n  }\r\n  /**\r\n   *\r\n   * @param {number[]} axis\r\n   */\r\n  #moveAxis(axis) {\r\n    const nonEmptyCells = axis.filter((item) => item !== 0);\r\n    const newAxis = [];\r\n    const mergedValues = [];\r\n\r\n    for (let index = 0; index < nonEmptyCells.length; index++) {\r\n      let currentValue = nonEmptyCells[index];\r\n      const nextValue = nonEmptyCells[index + 1];\r\n\r\n      if (currentValue === nextValue) {\r\n        currentValue = currentValue + nextValue;\r\n        mergedValues.push(currentValue);\r\n        index++;\r\n      }\r\n\r\n      newAxis.push(currentValue);\r\n    }\r\n\r\n    while (newAxis.length < axis.length) {\r\n      newAxis.push(0);\r\n    }\r\n\r\n    return { newAxis, mergedValues };\r\n  }\r\n}\r\n\r\nmodule.exports = Board;\r\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","/**\r\n *\r\n * @param {number} max\r\n * @param {number} min\r\n * @returns random number from `min` inclusive to `max` exclusive\r\n * @example getRandomNumber(10, 20): // any number in [10, 11...19]\r\n */\r\n\r\nfunction getRandomNumber(max, min = 0) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nmodule.exports = getRandomNumber;\r\n","/**\n *\n * @param {Object<string, HTMLElement>} HTMLMessages\n * @param {string} gameStatus\n * @param {string} hiddenClass\n */\nfunction displayMessage(HTMLMessages, gameStatus, hiddenClass) {\n  for (const HTMLMessage in HTMLMessages) {\n    if (!HTMLMessages[HTMLMessage].classList.contains(hiddenClass)) {\n      HTMLMessages[HTMLMessage].classList.add(hiddenClass);\n    }\n  }\n\n  HTMLMessages[gameStatus]?.classList.remove(hiddenClass);\n}\n\nmodule.exports = displayMessage;\n","/**\n *\n * @param {number[][]} state\n * @param {HTMLElement[]} HTMLCells\n */\nfunction placeState(state, HTMLCells) {\n  const FIELD_CELL_CLASSES = 'field-cell field-cell--';\n\n  for (const y in state) {\n    for (const x in state[y]) {\n      const currentCell = HTMLCells[y * state.length + +x];\n      const currentValue = state[y][x];\n\n      currentCell.innerHTML = currentValue;\n      currentCell.className = FIELD_CELL_CLASSES + currentValue;\n    }\n  }\n}\n\nmodule.exports = placeState;\n"],"names":["$344b02e633e0f2c2$exports","$8713978b2328d32b$export$2996f80ef42b8419","instance","Constructor","TypeError","$753de3cb5925592a$export$20c20a422940e173","receiver","privateMap","action","has","get","$2f97c2a4ea6269f4$export$5a67b255b80ee4f2","descriptor","call","value","$f86983e96b0c893e$export$6b10452b5ac97eba","obj","privateCollection","$5d6c3530fa14a187$export$e235798705076415","set","$20d5c04b0c6865c9$export$268446c9779b3a21","writable","$ac6739cbe5bf1c84$export$ccedaf978f62b9dd","privateSet","fn","$ea91727f98d0802f$export$1002c20f28174dbf","add","$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","enumerable","configurable","Object","defineProperty","key","$4fc75ccb937ab1df$export$d60067ff2358eee8","protoProps","staticProps","prototype","$cd5a47cf8ef6d766$export$1e71eb4bef00f6b0","$bcecb64214fa611a$exports","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","toString","slice","constructor","name","test","$bcecb64214fa611a$var$_state","WeakMap","$bcecb64214fa611a$var$_moveAxis","WeakSet","$bcecb64214fa611a$var$Board","Board","state","filterFn","result","getState","y","x","indexes","push","map","row","newState","mergedValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_class_private_method_get_call","$bcecb64214fa611a$var$moveAxis","mergedAxisValues","newAxis","apply","err","return","reverse","column","newColumn","y1","axis","nonEmptyCells","filter","item","index","currentValue","nextValue","$5e3de3f543b2de52$exports","max","min","arguments","Math","floor","random","$344b02e633e0f2c2$var$_initialState","$344b02e633e0f2c2$var$_board","$344b02e633e0f2c2$var$_score","$344b02e633e0f2c2$var$_status","$344b02e633e0f2c2$var$_move","$344b02e633e0f2c2$var$_checkWin","$344b02e633e0f2c2$var$_checkLose","$344b02e633e0f2c2$var$_fillRandomCell","$344b02e633e0f2c2$var$Game","Game","initialState","restart","_this","$344b02e633e0f2c2$var$move","getMovedLeftState","getMovedRightState","getMovedUpState","getMovedDownState","STATUSES","playing","cellsLeft","$344b02e633e0f2c2$var$fillRandomCell","idle","cb","_cb","JSON","stringify","reduce","sum","$344b02e633e0f2c2$var$checkWin","$344b02e633e0f2c2$var$checkLose","flat","find","win","some","getMovedState","lose","cellsWithZeros","filterCells","_cellsWithZeros_getRandomNumber","$786b808137f48d08$exports","HTMLMessages","gameStatus","hiddenClass","_HTMLMessages_gameStatus","HTMLMessage","classList","contains","remove","$aa191dae48ec707d$exports","HTMLCells","currentCell","innerHTML","className","FIELD_CELL_CLASSES","$197cd56b15c33885$var$HIDDEN_CLASS","$197cd56b15c33885$var$HTMLStartButtons","start","document","querySelector","$197cd56b15c33885$var$HTMLMessages","$197cd56b15c33885$var$HTMLScore","$197cd56b15c33885$var$HTMLCells","querySelectorAll","$197cd56b15c33885$var$game","addEventListener","getStatus","getScore","e","code","moveDown","moveUp","moveLeft","moveRight"],"version":3,"file":"index.1f9d8f2b.js.map"}